[project]
name = "fao-elt-pipeline"
version = "1.0.0"
description = "FAO ELT Pipeline with medallion architecture"
requires-python = ">=3.11"

[tool.ruff]
# Set line length to 120 (more practical for data pipelines)
line-length = 100

# Target Python 3.11
target-version = "py311"

# Exclude directories
extend-exclude = [
  "migrations",
  "__pycache__",
  "*.pyc",
  "*.pyo",
  "build",
  "dist",
  ".venv",
  "venv",
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  ".ruff_cache",
  "dbt_project/target",
  "dbt_project/dbt_packages",
  "dbt_project/logs",
]

[tool.ruff.lint]
# Enable rule sets appropriate for data engineering
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear (finds bugs)
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade (Python version upgrades)
  "N",   # pep8-naming
  "SIM", # flake8-simplify
  "S",   # flake8-bandit (security)
  "DTZ", # flake8-datetimez (timezone aware)
  "LOG", # flake8-logging
  "RUF", # Ruff-specific rules
]

# Ignore specific rules
ignore = [
  "E501", # line too long (handled by formatter)
  "B008", # function calls in argument defaults
  "S101", # use of assert (common in tests)
  "S105", # hardcoded password (false positives with SQL)
  "S106", # hardcoded password (false positives)
  "S608", # SQL injection (we use parameterized queries)
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Ignore certain rules in specific files
"__init__.py" = ["F401"] # unused imports
"tests/*" = ["S101", "S106"] # asserts and "passwords" in tests
"scripts/*" = ["S603", "S607"] # subprocess calls in scripts
"ingestion/api_client.py" = [
  "S113",
] # requests without timeout (handled at session level)

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["ingestion", "orchestration"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.mccabe]
# Maximum McCabe complexity
max-complexity = 10

[tool.ruff.lint.pep8-naming]
# Allow common data science abbreviations
ignore-names = ["df", "pd", "np", "plt"]

[tool.ruff.format]
# Formatting options
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Format code in docstrings
docstring-code-format = true
docstring-code-line-length = 88 # Keep examples shorter
